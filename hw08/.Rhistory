input %>% gather(nationality, birthplace, a:b)
input %>% gather(nationality, birthplace, a:b) %>% spread(a:b)
input %>% gather(nationality, birthplace, a:b) %>% spread(nationality,birthplace)
tibble(gapminder)
gapminder
gapminder %>% select(country=="Afghanistan")
gapminder %>% filter(country=="Afghanistan")
tibble(x=1900:2017)
a<-tibble(x=1900:2017)
a
type(a)
gapminder%>%filter(country=="China")
gapminder%>%filter(country=="China")%>%select(year, lifeExp)
gapminder%>%filter(country=="Japan")%>%select(year, lifeExp)
japan <- gapminder%>%filter(country=="Japan")%>%select(year, lifeExp)
left_join(a, china)
china
total<-tibble(x=1900:2017)
china <- gapminder%>%filter(country=="China")%>%select(year, lifeExp)
japan <- gapminder%>%filter(country=="Japan")%>%select(year, lifeExp)
left_join(total, china)
total
china
total<-tibble(year=1900:2017)
left_join(total, china)
left_japan <- left_join(left_china, japan)
left_china <- left_join(total, china)
left_china
left_japan <- left_join(left_china, japan)
left_japan
library(knitr)
kable(left_japan)
total<-tibble(year=1900:2010)
total
china <- gapminder%>%filter(country=="China")%>%select(year, lifeExp)
japan <- gapminder%>%filter(country=="Japan")%>%select(year, lifeExp)
left_china <- full_join(total, china)
left_china
kable(left_china)
left_japan <- full_join(left_china, japan, by="year")
left_japan
kable(left_japan)
left_japan <- full_join(left_china, japan, by="year")
left_japan %>% filter(lifeExp.x != "NA")
gapminder
gapminder%>%filter(continent=="Asia")
gapminder%>%group_by(continent)
gapminder%>%group_by(continent)%>%group_by(year)
gapminder%>%group_by(continent)%>%arrange(year)
gapminder%>%group_by(continent)%>%arrange(year)%>%select(year, lifeExp)
gapminder%>%filter(continent=="Asia")%>%arrange(year)%>%select(year, lifeExp)
gapminder%>%filter(continent=="Asia")%>%arrange(year)%>%select(year, lifeExp)%>%summarize(avg_life=mean(lifeExp))
gapminder%>%filter(continent=="Asia")%>%arrange(year)%>%select(year, lifeExp)%>%group_by(year)%>%summarize(avg_life=mean(lifeExp))
gapminder$continent
Asia<-gapminder%>%filter(continent=="Asia")%>%arrange(year)%>%select(year,lifeExp)%>%group_by(year)%>%summarize(avg_life=mean(lifeExp))
Europe<-gapminder%>%filter(continent=="Europe")%>%arrange(year)%>%select(year,lifeExp)%>%group_by(year)%>%summarize(avg_life=mean(lifeExp))
Africa<-gapminder%>%filter(continent=="Africa")%>%arrange(year)%>%select(year,lifeExp)%>%group_by(year)%>%summarize(avg_life=mean(lifeExp))
Americas<-gapminder%>%filter(continent=="Americas")%>%arrange(year)%>%select(year,lifeExp)%>%group_by(year)%>%summarize(avg_life=mean(lifeExp))
Oceania<-gapminder%>%filter(continent=="Oceania")%>%arrange(year)%>%select(year,lifeExp)%>%group_by(year)%>%summarize(avg_life=mean(lifeExp))
total<-tibble(year=1900:2010)
left_asia <- full_join(total, Asia)
left_europe <- full_join(left_asia, Europe, by="year")
left_africa <- full_join(left_europe, Africa, by="year")
left_america <- full_join(left_africa, Amercias, by="year")
left_all <- full_join(left_amercia, Oceania, by="year")
result <- left_all %>% filter(lifeExp.x != "NA")
Asia<-gapminder%>%filter(continent=="Asia")%>%arrange(year)%>%select(year,lifeExp)%>%group_by(year)%>%summarize(avg_life=mean(lifeExp))
Europe<-gapminder%>%filter(continent=="Europe")%>%arrange(year)%>%select(year,lifeExp)%>%group_by(year)%>%summarize(avg_life=mean(lifeExp))
Africa<-gapminder%>%filter(continent=="Africa")%>%arrange(year)%>%select(year,lifeExp)%>%group_by(year)%>%summarize(avg_life=mean(lifeExp))
Americas<-gapminder%>%filter(continent=="Americas")%>%arrange(year)%>%select(year,lifeExp)%>%group_by(year)%>%summarize(avg_life=mean(lifeExp))
Oceania<-gapminder%>%filter(continent=="Oceania")%>%arrange(year)%>%select(year,lifeExp)%>%group_by(year)%>%summarize(avg_life=mean(lifeExp))
total<-tibble(year=1900:2010)
left_asia <- full_join(total, Asia)
left_europe <- full_join(left_asia, Europe, by="year")
left_africa <- full_join(left_europe, Africa, by="year")
left_america <- full_join(left_africa, Amercias, by="year")
left_america <- full_join(left_africa, Americas, by="year")
left_all <- full_join(left_amercia, Oceania, by="year")
left_all <- full_join(left_america, Oceania, by="year")
left_all
result <- left_all %>% filter(avg_life.x != "NA")
kable(result)
temp <- gapminder %>% filter(continent == "Asia") %>% select(year, country, lifeExp) %>% group_by(year) %>% filter(min_rank(desc(lifeExp)) < 2 | min_rank(lifeExp) < 2) %>% arrange(year) %>% print(n = Inf)
temp
gapminder %>% filter(continent == "Asia") %>% select(year, country, lifeExp) %>% group_by(year) %>% filter(min_rank(desc(lifeExp)) < 2 | min_rank(lifeExp) < 2) %>% arrange(year) %>% print(n = Inf)
temp <- gapminder %>% filter(continent == "Asia") %>% select(year, country, lifeExp) %>% group_by(year) %>% filter(min_rank(desc(lifeExp)) < 2 | min_rank(lifeExp) < 2) %>% arrange(year) %>% print(n = Inf)
temp
typeof(temp)
temp[1]
temp[2]
temp
temp[1]
temp
str(temp)
unlist(temp)
length(temp)
even_sequence=seq(2,24,2)
even_sequence
temp_even <- data.frame(x=temp.pc$loadings[even_sequence, ])
temp_even <- data.frame(x=temp[even_sequence, ])
temp_even
result <- full_join(temp, temp_even, c("year" ="x.year")
result <- full_join(temp, temp_even, c("year" ="x.year"))
result
kable(result)
A <- data.frame(
c1 = c('A', 'A', 'A', 'A', 'A', 'B', 'B'),
c2 = c('a', 'a', 'a', 'b', 'b', 'c', 'd'),
c3 = c(1, 3, 1, 1, 2, 2, 1))
B <- A %.%
group_by(c1,c2) %.%
summarize(Nrows=n(),
SumOfCol3=sum(c3))
B <- A %>%
group_by(c1,c2) %>%
summarize(Nrows=n(),
SumOfCol3=sum(c3))
kable(B)
B <- gapminder %>% group_by(continent,country) %>% summarize(Nrows=n(), SumOfCol3=sum(year))
B
C <- dcast(B,continent~country,value.var="Nrows")
library(reshape2)
library(dplyr)
C <- dcast(B,continent~country,value.var="Nrows")
C
kable(C)
C <- dcast(B,continent,value.var="Nrows")
C <- dcast(B,continent~year,value.var="Nrows")
C <- dcast(B,continent~country,value.var="Nrows")
C
B <- gapminder %>% group_by(continent) %>% summarize(Nrows=n(), SumOfCol3=sum(year))
B
C <- dcast(B,continent~country,value.var="Nrows")
C <- dcast(B,continent,value.var="Nrows")
C <- dcast(B,continent~continent,value.var="Nrows")
C
D <- melt(C,id="continent") %>% arrange(continent)
D
step1 <- gapminder %>% group_by(continent) %>% summarize(Nrows=n(), SumOfCol3=sum(year))
kable(step1)
step2 <- dcast(step1,continent~continent,value.var="Nrows")
kable(step2)
step3 <- melt(step2,id="continent") %>% arrange(continent)
kable(step3)
step4 = left_join(step3, step3, c=("continent" = "variable"))
step4
step5 <- step4 %>% filter("continent" = "Africa")
step5 <- step4 %>% filter("continent" == "Africa")
step5
step4
step4 %>% filter("continent" == "Africa")
step4 %>% filter("continent" == "Africa")
step4 %>% filter("continent" == "Asia")
step4 %>% filter( Variable == "Asia")
step4 %>% filter( "Variable" == "Asia")
step5 <- filter(step4 "Variable" == "Asia")
step5 <- filter(step4,"Variable" == "Asia")
step5
step5 <- filter(step4,"Continent" == "Asia")
step5
H_transpose <- data.frame(t(gapminder))
H_transpose
H_transpose <- data.frame(t(step4))
H_transpose <- data.frame(t(step4))
H_transpose
gapminder
gapminder$country
unique(gapminder$country)
library(geonames)
install.packages("geonames")
library(geonames)
geonames
library(countrycode)
install.packages("countrycode")
package("countrycode")
library("countrycode")
countrycode
library(countrycode)
countrycode()
countrycode
countryInfo <- GNcountryInfo()
library(geonames)
countryInfo <- GNcountryInfo()
options(geonamesUsername="insert_username")
countryInfo <- GNcountryInfo()
options(geonamesUsername="jasonsunbao")
countryInfo <- GNcountryInfo()
countryInfo <- GNcountryInfo()
countryInfo
countryInfo$countryName
dataset2 <- countryInfo%>%select(countryName, countryCode)
options(geonamesUsername="jasonsunbao")
countryInfo <- GNcountryInfo()
dataset2 <- countryInfo%>%select(countryName, countryCode)
dataset1 <- gapminder
options(geonamesUsername="jasonsunbao")
countryInfo <- GNcountryInfo()
dataset2 <- countryInfo%>%select(countryName, countryCode)
dataset1 <- gapminder
inner_join(dataset1, dataset2, c("country" == "countryName"))
inner_join(dataset1, dataset2, c("country" = "countryName"))
inner_join(dataset1, dataset2, c("country" = "countryName")) %>% filter(year="1952")
inner_join(dataset1, dataset2, c("country" = "countryName")) %>% filter(year=1952)
inner_join(dataset1, dataset2, c("country" = "countryName")) %>% filter(year=="1952")
inner_join(dataset1, dataset2, c("country" = "countryName")) %>% filter(year=="1952")
semi_join(dataset1, dataset2, c("country" = "countryName")) %>% filter(year=="1952")
sex <- factor(c("a","b"))
sex
levels(sex)
gapminder
library(gapminder)
str(gapminder)
str(gapminder$continent)
library(forcats)
library(tidyverse)
h_countries <- c("Egypt", "Haiti", "Romania", "Thailand", "Venezuela")
h_gap <- gapminder %>%
filter(country %in% h_countries)
h_gap
count(h_gap)
nlevels(h_gap$country)
h_gap_dropped <- h_gap %>%
droplevels()
h_gap_dropped
nlevels(h_gap_dropped$country)
h_gap$country %>%levels()
h_gap$country
gapminder$continent %>%
levels()
gapminder$continent %>%
fct_infreq() %>%
levels()
library(singer)
library.install(singer)
install.packages(tidyverse)
install.packages("tidyverse")
install.packages("stringr")
install.packages("glue")
My_name <- "Giulio"
My_age <- 32
My_twitter <- "ipnosimmia"
glue('My name is {My_name},',
' my age next year is {My_age + 1},',
' my twitter handle is @{My_twitter}.')
library(glue)
library(tidyverse)
library(stringr)
library(glue)
glue('My name is {My_name},',
' my age next year is {My_age + 1},',
' my twitter handle is @{My_twitter}.')
glue('
My name is {My_name},
my age last year was {My_age - 2},
my twitter handle is @{My_twitter}.
')
glue('Today is {_____} and the sun shines.',
today_date = Sys.Date())
glue('Today is {today_date} and the sun shines.',
today_date = Sys.Date())
glue({today_date},
today_date = format(Sys.Date(), "%A, %B %d, %Y"))
glue('{today_date}',
today_date = format(Sys.Date(), "%A, %B %d, %Y"))
getNamespaceExports("stringr")
getNamespaceExports("stringr") %>%
str_view("_____")
getNamespaceExports("stringr") %>%
str_view("aaaa")
getNamespaceExports("s%
str_view("aaaa")
library("stringr")
getNamespaceExports("stringr") %>%
str_view("_____")
getNamespaceExports("stringr") %>%str_view("aaaa")
fruit
str_detect(fruit, pattern = "fruit")
my_fruit <- str_subset(fruit, pattern = "fruit")
my_fruit
str_split(my_fruit, pattern = " ")
head(fruit)
head(fruit) %>%
str_sub(1, 3)
tibble(fruit)
tibble(fruit)
x <- head(fruit, 3)
x <- head(fruit, 3)
x
head(fruit) %>%
str_c(collapse = ", ")
str_c(fruit[1:4], fruit[5:8], sep = " & ")
str_c(fruit[1:4], fruit[5:8], sep = " & ", collapse = ", ")
fruit[1:4]
fruit[5:8]
fruit1 = fruit[1:4]
fruit1
fruit_df <- tibble(
fruit1 = fruit[1:4],
fruit2 = fruit[5:8]
)
fruit_df
fruit_df %>%
unite("flavor_combo", fruit1, fruit2, sep = " & ")
str_replace(my_fruit, pattern = "fruit", replacement = "THINGY")
melons <- str_subset(fruit, pattern = "melon")
melons
melons[2] <- NA
melons
str_replace_na(melons, "UNKNOWN MELON")
tibble(melons) %>%
replace_na(replace = list(melons = "UNKNOWN MELON"))
library(gapminder)
levels(gapminder$country)
countries <- levels(gapminder$country)
str_subset(countries, pattern = "i.a")
max_minus_min <- function(x) max(x) - min(x)
max_minus_min(gapminder$lifeExp)
max_minus_min(1:10)
max_minus_min(runif(1000))
max_minus_min(1:10)
max_minus_min(1:10)
a<-1:10
a
max_minus_min(gapminder)
max_minus_min(gapminder$country)
max_minus_min("eggplants are purple")
max_minus_min(gapminder$country)
max_minus_min(gapminder$country)
max_minus_min("eggplants are purple")
mmm <- function(x) {
stopifnot(is.numeric(x))
max(x) - min(x)
}
mmm2 <- function(x) {
if(!is.numeric(x)) {
stop('I am so sorry, but this function only works for numeric input!\n',
'You have provided an object of class: ', class(x)[1])
}
max(x) - min(x)
}
mmm2(gapminder)
quantile(gapminder$lifeExp)
quantile(gapminder$lifeExp, probs = 0.5)
quantile(gapminder$lifeExp, probs = 0.54)
median(gapminder$lifeExp)
quantile(gapminder$lifeExp, probs = c(0.25, 0.75))
boxplot(gapminder$lifeExp, plot = FALSE)$stats
the_probs <- c(0.25, 0.75)
the_probs
the_quantiles <- quantile(gapminder$lifeExp, probs = the_probs)
the_quantiles
max(the_quantiles) - min(the_quantiles)
qdiff1(gapminder$lifeExp, probs = c(0.25, 0.75))
z <- gapminder$lifeExp
z[3] <- NA
quantile(gapminder$lifeExp)
quantile(z)
qdiff7 <- function(x, probs = c(0, 1), na.rm = TRUE, ...) {
the_quantiles <- quantile(x = x, probs = probs, na.rm = na.rm, ...)
return(max(the_quantiles) - min(the_quantiles))
}
estimate_central_tendency <- function(input, npar=TRUE, result = TRUE){
if(!npar){
result_center <- mean(input);
estimiation_std <- sd(x);
}
else{
result_center <- median(input);
estimiation_std <- mad(x);
}
if(result & !npar){
cat("Mean=", result_center, "\n", "Standard_Deviation=", estimiation_std, "\n")
}
else if(result & npar){
cat("Median=", result_center, "\n", "Standard_Deviation=", estimiation_std, "\n")
}
return_result <- list(center=result_center,spread=estimiation_std)
return(return_result)
}
set.seed(1234)
x <- rpois(500, 4)
y <- estimate_central_tendency(x)
find_bigger_number <- function(input1, input2){
stopifnot(is.numberic(input1));
stopifnot(is.numberic(input2));
if(input1 >= input2){
retrun(input1)
}
else{
return(input2)
}
}
output_result = find_bigger_number(15,20)
find_bigger_number <- function(input1, input2){
stopifnot(is.numeric(input1));
stopifnot(is.numeric(input2));
if(input1 >= input2){
retrun(input1)
}
else{
return(input2)
}
}
output_result = find_bigger_number(15,20)
output_result
squared_number <- function(input_number){
stopifnot(is.numeric(input_number))
if(input_number < 0) return(0)
current_result <- sqrt(input_number)
return current_result
}
squared_number <- function(input_number){
stopifnot(is.numeric(input_number))
if(input_number < 0) return(0)
current_result <- sqrt(input_number)
return current_result
}
squared_number <- function(input_number){
stopifnot(is.numeric(input_number))
if(input_number < 0) return(0)
current_result <- sqrt(input_number)
return(current_result)
}
squared_output = squared_number(10)
squared_output
ls
pwd
wget https://github.com/jennybc/gapminder/blob/master/inst/extdata/gapminder.tsv
load_data <- read.delim("gapminder.tsv")
View(load_data)
download.file("https://github.com/jennybc/gapminder/blob/master/inst/extdata/gapminder.tsv", destfile="entry.tsv")
load_data <- read.delim("gapminder.tsv")
aaa <- read.delim("gapminder.tsv")
View(aaa)
aaa <- read.delim("gapminder")
aaa <- read.delim("/Users/jasonsun/stat545/work1/STAT545-hw01--Bao-Sun/hw07/gapminder")
asialifeexp <- gapminder %>% select(continent, year, lifeExp) %>% filter(continent=="Asia") %>% group_by(year) %>% summarize(avg_life_exp = mean(lifeExp))
library(gapminder)
library(tidyverse)
library(ggplot2)
library(knitr)
library(ggthemes)
library(reshape)
asialifeexp <- gapminder %>% select(continent, year, lifeExp) %>% filter(continent=="Asia") %>% group_by(year) %>% summarize(avg_life_exp = mean(lifeExp))
asialifeexp
avg(asialifeexp$avg_life_exp)
asialifeexp$year
asialifeexp$year[1]
asialifeexp$year[12]
asia <- asialifeexp$year[12] <- gapminder %>% select(continent, year, lifeExp) %>% filter(continent=="Asia") %>% group_by(year) %>% summarize(avg_life_exp = mean(lifeExp))
gapminder %>% select(continent, year, lifeExp) %>% filter(continent=="Asia") %>% group_by(year) %>% summarize(avg_life_exp = mean(lifeExp))
gapminder %>% select(continent, year, lifeExp) %>% filter(continent=="Asia") %>% group_by(year) %>% summarize(avg_life_exp = mean(lifeExp))$year
gapminder %>% select(continent, year, lifeExp) %>% filter(continent=="Asia") %>% group_by(year) %>% summarize(avg_life_exp = mean(lifeExp))
gapminder %>% select(continent, year, lifeExp) %>% filter(continent=="Asia") %>% group_by(year) %>% summarize(avg_life_exp = mean(lifeExp))
asialifeexp <- gapminder %>% select(continent, year, lifeExp) %>% filter(continent=="Asia") %>% group_by(year) %>% summarize(avg_life_exp = mean(lifeExp))
asialifeexp
asialifeexp$year
asialifeexp$year[1]
asialifeexp$year[12]
asialifeexp <- gapminder %>% select(continent, year, lifeExp) %>% filter(continent=="Asia") %>% group_by(year) %>% summarize(avg_life_exp = mean(lifeExp))
asia <- asialifeexp$year[12]
asia
asialifeexp <- gapminder %>% select(continent, year, lifeExp) %>% filter(continent=="Asia") %>% group_by(year) %>% summarize(avg_life_exp = mean(lifeExp))
asia <- asialifeexp$year[12]
asialifeexp <- gapminder %>% select(continent, year, lifeExp) %>% filter(continent=="Asia") %>% group_by(year) %>% summarize(avg_life_exp = mean(lifeExp))
ggplot(gapminder, aes(x=continent, y=gdpPercap)) +
geom_boxplot(outlier.colour = "blue", alpha=0.5, size=1, shape=1)  +
scale_y_log10()
kable(gapminder %>%
group_by(continent) %>%
summarize(mean=mean(gdpPercap),min=min(gdpPercap), max=max(gdpPercap), std=sd(gdpPercap), q25=quantile(gdpPercap, probs=.25), q50=quantile(gdpPercap, probs=.5), q75=quantile(gdpPercap, probs=.75)))
summary(asia<-gapminder %>% group_by(continent) %>% select(continent, gdpPercap) %>% filter(continent=="Asia")%>%arrange(gdpPercap))
asia<-gapminder %>% group_by(continent) %>% select(continent, gdpPercap) %>% filter(continent=="Asia")%>%arrange(gdpPercap)
asia
gdpper <- gapminder %>% group_by(continent) %>% summarize(maximum_gdpPercap=max(gdpPercap), minimum_gdpPercap=min(gdpPercap))
kable(gdpper)
sort(gdpper$maximum_gdpPercap)
download.file(url = "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/country-codes.tsv", destfile = "iso-codes.tsv")
install.packages("downloader")
gapminder <- read.delim("gapminder.tsv")
countrycode <- read.delim("countrycode.tsv")
pwd
ls
cd
install.packages("forcats")
install.packages("forcats")
install.packages("purrr")
install.packages("ggmap")
install.packages("broom")
shiny::runApp('stat545/work1/STAT545-hw01--Bao-Sun/hw08')
install.packages("DT")
runApp('stat545/work1/STAT545-hw01--Bao-Sun/hw08')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/hw08')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/hw08')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/hw08')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/temp')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/temp')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/hw08')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/hw08')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/temp')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/hw08')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/hw08')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/hw08')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/hw08')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/temp')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/temp')
shiny::runApp('stat545/work1/STAT545-hw01--Bao-Sun/temp')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/temp')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/temp')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/hw08')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/temp')
runApp('stat545/work1/STAT545-hw01--Bao-Sun/hw08')
